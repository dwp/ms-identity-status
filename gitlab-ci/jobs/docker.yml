########################################################################################
###    Jobs specific to docker builds                                                ###
###      - linting                                                                   ###
###      - image build                                                               ###
###      - image test                                                                ###
###      - image push                                                                ###
########################################################################################

### ENVIRONMENT
.environment: &environment
  environment:
    name: "$ENVIRONMENT"
    action: prepare

### TRIGGERS
.docker-build: &docker-build
  rules:
    - if: $BUILD_TYPE

.docker-not-merge: &docker-not-merge
  rules:
    - if: $BUILD_TYPE && $MERGE_TO_DEVELOP == null

.docker-build-only-prod: &docker-build-only-prod
  rules:
    - if: $BUILD_TYPE && $PROD_AWS_ACCESS_KEY_ID && $PROD_AWS_SECRET_ACCESS_KEY && $PROD_AWS_SESSION_TOKEN

.prepare-test: &prepare-test
  before_script:
    - apk add --no-cache py-pip jq
    - pip install awscli
    - eval $(aws ecr get-login --no-include-email --region eu-west-2 | sed 's|https://||')
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - export APP_IMAGE="$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:${CI_COMMIT_SHA:0:8}"
    - export MOCK_IMAGE=$(aws ssm get-parameter --name "/artifact/$PRODUCT/$PIP_APPLY_MOCKS_NAME/$PIP_APPLY_MOCKS_BRANCH" --with-decryption --output json | jq --raw-output '.Parameter.Value')

### LINT
docker-lint:
  extends: .docker-lint-template
  <<: *environment
  <<: *docker-not-merge

### BUILD
docker-build:
  extends: .docker-build-template
  variables:
    ADD_LATEST_TAG: "true"
    DOCKER_CLI_ARGS: "--build-arg GITLAB_REGISTRY_TOKEN=${GITLAB_REGISTRY_TOKEN}"
  <<: *environment
  <<: *docker-build

### COMPONENT TEST
api-tests:
  extends: .docker-compose-run-template
  after_script:
    - docker logout
  variables:
    DOCKER_COMPOSE_FILE: "docker-compose.yml"
    DOCKER_COMPOSE_COMMAND: "--exit-code-from api-tests"
    MVN_OPTS: '-Dmaven.repo.local=~/.m2/repository'
    MVN_M2: "~/.m2"
  <<: *prepare-test
  <<: *environment
  <<: *docker-build

### IMAGE TEST
sast-container:
  extends: .sast-container-base
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - scheduler_failure
  <<: *environment
  <<: *docker-build

trivy-report:
  extends: .trivy-report-base
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - scheduler_failure
  <<: *environment
  <<: *docker-build

trivy-container:
  extends: .trivy-container-base
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - scheduler_failure
  <<: *environment
  <<: *docker-build

container-test-command:
  extends: .container-test-template
  <<: *environment
  <<: *docker-build

### IMAGE PUSH
push-to-ecr-nonprodaws:
  extends: .push-to-ecr
  variables:
    ACCOUNT_ID: $DEV_ACCOUNT_ID
  <<: *environment
  <<: *docker-build

push-to-ecr-prodaws:
  extends: .push-to-ecr
  before_script:
    - |
      echo "Setting production credentials..."
      export AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID
      export AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY
      export AWS_SESSION_TOKEN=$PROD_AWS_SESSION_TOKEN
  variables:
    ACCOUNT_ID: $PROD_ACCOUNT_ID
  <<: *environment
  <<: *docker-build-only-prod



